name: Python application CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  sonarcloud:
    name: SonarCloud
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.REPO_ACCESS_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          projectBaseDir: .
          args: >
            -Dsonar.projectKey=lucasecdev_apigha
            -Dsonar.organization=lucasecdev

  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.REPO_ACCESS_TOKEN }}

    - name: Checkout private repository (repomani)
      uses: actions/checkout@v4
      with:
        repository: Lucasecdev/repomani
        token: ${{ secrets.REPO_ACCESS_TOKEN }}
        path: repomani

    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

    - name: Test with pytest
      run: |
        pytest

    - name: Log in to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Build and push Docker image
      uses: docker/build-push-action@v2
      with:
        context: .
        push: true
        tags: ${{ secrets.DOCKERHUB_USERNAME }}/api_teste:latest

 alterar_tag:
    runs-on: ubuntu-latest
    needs: build-and-push
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          repository: Lucasecdev/repomani
          token: ${{ secrets.REPO_ACCESS_TOKEN }}

      - name: Set run number
        run: echo "RUN_NUMBER=${{ github.run_number }}" >> $GITHUB_ENV

      - name: Modify yaml File
        run: |
          sed -i "s/^      tag: .*/      tag: $RUN_NUMBER/" ./fastapi/values.yaml

      - name: Cat values.yaml to verify changes
        run: cat ./fastapi/values.yaml

      - name: Commit and Push Changes
        run: |
          git config user.name "Lucasecdev"
          git config user.email "lucasvinisocial@gmail.com"
          git add ./fastapi/values.yaml
          git commit -m "Update image name in yaml file"
          git push
